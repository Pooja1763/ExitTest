<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-28T08:40:48Z" name="Suite" finished-at="2022-07-28T08:42:40Z" duration-ms="111889">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner@17d88132]" name="feature" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-07-28T08:40:48Z" name="Test" finished-at="2022-07-28T08:42:40Z" duration-ms="111889">
      <class name="Runner.Runner">
        <test-method is-config="true" signature="setUp()[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:40:46Z" name="setUp" finished-at="2022-07-28T08:40:48Z" duration-ms="2014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:40:48Z" name="setUpClass" finished-at="2022-07-28T08:40:48Z" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:40:48Z" name="startTest" finished-at="2022-07-28T08:40:48Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cucumber.api.testng.AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:40:48Z" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2022-07-28T08:41:05Z" duration-ms="16361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Check the Functionality of Animation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:41:05Z" name="reportFlush" finished-at="2022-07-28T08:41:05Z" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=SUCCESS method=AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner@17d88132] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:41:05Z" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2022-07-28T08:41:21Z" duration-ms="15720" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Check the Functionality of APP]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:41:05Z" name="startTest" finished-at="2022-07-28T08:41:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cucumber.api.testng.AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:41:21Z" name="reportFlush" finished-at="2022-07-28T08:41:21Z" duration-ms="34" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=SUCCESS method=AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner@17d88132] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:41:21Z" name="startTest" finished-at="2022-07-28T08:41:21Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cucumber.api.testng.AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:41:21Z" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2022-07-28T08:41:34Z" duration-ms="13248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Check the Functionality of Content]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:41:34Z" name="reportFlush" finished-at="2022-07-28T08:41:34Z" duration-ms="28" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=SUCCESS method=AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner@17d88132] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:41:34Z" name="startTest" finished-at="2022-07-28T08:41:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cucumber.api.testng.AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:41:34Z" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2022-07-28T08:42:25Z" duration-ms="51328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Check the Functionality of OS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:42:25Z" name="reportFlush" finished-at="2022-07-28T08:42:25Z" duration-ms="23" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=SUCCESS method=AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner@17d88132] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:42:25Z" name="startTest" finished-at="2022-07-28T08:42:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cucumber.api.testng.AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:42:25Z" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2022-07-28T08:42:40Z" duration-ms="14628" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Check the Functionality of View]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:42:40Z" name="reportFlush" finished-at="2022-07-28T08:42:40Z" duration-ms="23" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=SUCCESS method=AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner@17d88132] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:42:40Z" name="tearDownClass" finished-at="2022-07-28T08:42:40Z" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Runner.Runner@17d88132]" started-at="2022-07-28T08:42:40Z" name="tearDown" finished-at="2022-07-28T08:42:40Z" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Runner.Runner -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
